"use client";

import Link from 'next/link';
import { usePathname } from 'next/navigation';
import React, { FC } from 'react';
import { Button } from '../ui/button';
import { Separator } from '../ui/separator';
import * as icons from 'lucide-react';
import { deleteCookie } from 'cookies-next';
import { useRouter } from 'next/navigation';
import {
    Tooltip,
    TooltipContent,
    TooltipProvider,
    TooltipTrigger,
} from "../ui/tooltip";
import { AppRouterInstance } from 'next/dist/shared/lib/app-router-context.shared-runtime';

interface MainMenuProps { }

/**
 * Represents the main menu component.
 * @component
 * @returns {React.JSX.Element} The rendered component.
 */
const MainMenu: FC<MainMenuProps> = (): React.JSX.Element => {

    /**
     * The router object used for navigation.
     */
    const router: AppRouterInstance = useRouter();

    /**
     * Represents the state of the MainMenu component.
     * @typedef {Object} MainMenuState
     * @property {boolean} isOpen - Indicates whether the MainMenu is open or closed.
     */
    const [isOpen, setIsOpen] = React.useState(true);

    /**
     * Retrieves the current pathname using the `usePathname` hook.
     * @returns The current pathname as a string.
     */
    const path: string = usePathname();

    /**
     * Retrieves the page context from the given path.
     * 
     * @param path - The path from which to extract the page context.
     * @returns The page context extracted from the path.
     */
    const pageContext: string = path.split('/')[1];

    /**
     * Array of menu items.
     * Each menu item has a title, link, icon, and filledIcon.
     */
    const menuItems: {
        title: string;
        link: string;
        icon: string;
        filledIcon: string;
    }[] = [
            {
                title: 'Home',
                link: '/home',
                icon: "M 23.951172 4 A 1.50015 1.50015 0 0 0 23.072266 4.3222656 L 8.859375 15.519531 C 7.0554772 16.941163 6 19.113506 6 21.410156 L 6 40.5 C 6 41.863594 7.1364058 43 8.5 43 L 18.5 43 C 19.863594 43 21 41.863594 21 40.5 L 21 30.5 C 21 30.204955 21.204955 30 21.5 30 L 26.5 30 C 26.795045 30 27 30.204955 27 30.5 L 27 40.5 C 27 41.863594 28.136406 43 29.5 43 L 39.5 43 C 40.863594 43 42 41.863594 42 40.5 L 42 21.410156 C 42 19.113506 40.944523 16.941163 39.140625 15.519531 L 24.927734 4.3222656 A 1.50015 1.50015 0 0 0 23.951172 4 z M 24 7.4101562 L 37.285156 17.876953 C 38.369258 18.731322 39 20.030807 39 21.410156 L 39 40 L 30 40 L 30 30.5 C 30 28.585045 28.414955 27 26.5 27 L 21.5 27 C 19.585045 27 18 28.585045 18 30.5 L 18 40 L 9 40 L 9 21.410156 C 9 20.030807 9.6307412 18.731322 10.714844 17.876953 L 24 7.4101562 z",
                filledIcon: "M39.5,43h-9c-1.381,0-2.5-1.119-2.5-2.5v-9c0-1.105-0.895-2-2-2h-4c-1.105,0-2,0.895-2,2v9c0,1.381-1.119,2.5-2.5,2.5h-9	C7.119,43,6,41.881,6,40.5V21.413c0-2.299,1.054-4.471,2.859-5.893L23.071,4.321c0.545-0.428,1.313-0.428,1.857,0L39.142,15.52	C40.947,16.942,42,19.113,42,21.411V40.5C42,41.881,40.881,43,39.5,43z"
            },
            {
                title: 'Courses',
                link: '/courses',
                icon: "M 13.5 4 C 10.467 4 8 6.467 8 9.5 L 8 36 L 8 37.5 L 8 38.5 C 8 41.519774 10.480226 44 13.5 44 L 39.5 44 A 1.50015 1.50015 0 1 0 39.5 41 L 13.5 41 C 12.273237 41 11.277238 40.152347 11.050781 39 L 39.5 39 C 40.329 39 41 38.329 41 37.5 L 41 9.5 C 41 6.988 39.305 4.8678906 37 4.2128906 L 37 7.5136719 C 37.603 7.9706719 38 8.687 38 9.5 L 38 36 L 11 36 L 11 9.5 C 11 8.122 12.122 7 13.5 7 L 19 7 L 19 4 L 13.5 4 z M 21 4 L 21 5.5 L 21 7 L 21 20.5 A 1.50015 1.50015 0 0 0 23.21875 21.816406 L 28 19.208984 L 32.78125 21.816406 A 1.50015 1.50015 0 0 0 35 20.5 L 35 5.5 L 35 4 L 33.5 4 L 24 4 L 21 4 z M 24 7 L 32 7 L 32 17.972656 L 28.71875 16.183594 A 1.50015 1.50015 0 0 0 27.28125 16.183594 L 24 17.972656 L 24 7 z",
                filledIcon: "M 13.5 4 C 10.467 4 8 6.467 8 9.5 L 8 36 L 8 37.5 L 8 38.5 C 8 41.519774 10.480226 44 13.5 44 L 39.5 44 A 1.50015 1.50015 0 1 0 39.5 41 L 13.5 41 C 12.273237 41 11.277238 40.152347 11.050781 39 L 39.5 39 C 40.329 39 41 38.329 41 37.5 L 41 9.5 C 41 6.467 38.533 4 35.5 4 L 35 4 L 35 20.5 C 35 21.029 34.720625 21.519062 34.265625 21.789062 C 34.029625 21.929063 33.765 22 33.5 22 C 33.253 22 33.00525 21.938406 32.78125 21.816406 L 28 19.207031 L 23.21875 21.816406 C 22.75475 22.070406 22.191375 22.060063 21.734375 21.789062 C 21.279375 21.520063 21 21.029 21 20.5 L 21 4 L 13.5 4 z M 24 4 L 24 17.972656 L 27.28125 16.183594 C 27.50425 16.061594 27.753 16 28 16 C 28.247 16 28.49575 16.061594 28.71875 16.183594 L 32 17.972656 L 32 4 L 24 4 z"
            },
            {
                title: 'Leaderboard',
                link: '/leaderboard',
                icon: "M 15.5 5 C 11.928062 5 9 7.9280619 9 11.5 L 9 34 L 5.5 34 C 4.1364058 34 3 35.136406 3 36.5 L 3 38.5 C 3 40.967501 5.0324991 43 7.5 43 L 34.5 43 C 36.967501 43 39 40.967501 39 38.5 L 39 14 L 42.5 14 C 43.863594 14 45 12.863594 45 11.5 L 45 9.5 C 45 7.1132596 43.09387 5.1504737 40.736328 5.0234375 A 1.50015 1.50015 0 0 0 40.5 5 L 15.5 5 z M 15.5 8 L 36.306641 8 C 36.134564 8.4744795 36 8.9694092 36 9.5 L 36 12.253906 A 1.50015 1.50015 0 0 0 36 12.740234 L 36 38.5 C 36 39.346499 35.346499 40 34.5 40 C 33.653501 40 33 39.346499 33 38.5 L 33 36.5 C 33 35.136406 31.863594 34 30.5 34 L 12 34 L 12 11.5 C 12 9.5499381 13.549938 8 15.5 8 z M 40.5 8 C 41.346499 8 42 8.6535009 42 9.5 L 42 11 L 39 11 L 39 9.5 C 39 8.6535009 39.653501 8 40.5 8 z M 17.5 13 A 1.50015 1.50015 0 1 0 17.5 16 L 30.5 16 A 1.50015 1.50015 0 1 0 30.5 13 L 17.5 13 z M 17.5 20 A 1.50015 1.50015 0 1 0 17.5 23 L 30.5 23 A 1.50015 1.50015 0 1 0 30.5 20 L 17.5 20 z M 17.5 27 A 1.50015 1.50015 0 1 0 17.5 30 L 28.5 30 A 1.50015 1.50015 0 1 0 28.5 27 L 17.5 27 z M 6 37 L 10.253906 37 A 1.50015 1.50015 0 0 0 10.740234 37 L 30 37 L 30 38.5 C 30 39.030591 30.134564 39.52552 30.306641 40 L 7.5 40 C 6.6535009 40 6 39.346499 6 38.5 L 6 37 z",
                filledIcon: "M 15.5 5 C 11.916 5 9 7.916 9 11.5 L 9 33 L 26.5 33 C 28.981 33 31 35.019 31 37.5 L 31 40 C 31 41.65 32.338328 42.990047 33.986328 42.998047 L 34.013672 42.998047 C 35.654672 42.990047 36.987047 41.659531 36.998047 40.019531 C 36.999047 39.489531 37 8 37 8 C 37 6.87 37.390391 5.838 38.025391 5 L 15.5 5 z M 42 5 C 40.346 5 39 6.346 39 8 L 39 14 L 42.5 14 C 43.879 14 45 12.879 45 11.5 L 45 8 C 45 6.346 43.654 5 42 5 z M 16.5 12 L 29.5 12 C 30.328 12 31 12.672 31 13.5 C 31 14.328 30.328 15 29.5 15 L 16.5 15 C 15.672 15 15 14.328 15 13.5 C 15 12.672 15.672 12 16.5 12 z M 16.5 19 L 29.5 19 C 30.328 19 31 19.672 31 20.5 C 31 21.328 30.328 22 29.5 22 L 16.5 22 C 15.672 22 15 21.328 15 20.5 C 15 19.672 15.672 19 16.5 19 z M 16.5 26 L 27.5 26 C 28.328 26 29 26.672 29 27.5 C 29 28.328 28.328 29 27.5 29 L 16.5 29 C 15.672 29 15 28.328 15 27.5 C 15 26.672 15.672 26 16.5 26 z M 5.5 35 C 4.121 35 3 36.121 3 37.5 L 3 38.5 C 3 40.981 5.019 43 7.5 43 L 30.025391 43 C 29.390391 42.162 29 41.13 29 40 L 29 37.5 C 29 36.121 27.879 35 26.5 35 L 5.5 35 z"
            },
            {
                title: 'Achievements',
                link: '/achievements',
                icon: "M 7.5 6 C 5.0324991 6 3 8.0324991 3 10.5 L 3 35.5 C 3 39.071938 5.9280619 42 9.5 42 L 38.5 42 C 42.071938 42 45 39.071938 45 35.5 L 45 20.5 C 45 18.032499 42.967501 16 40.5 16 L 39 16 L 39 10.5 C 39 8.0324991 36.967501 6 34.5 6 L 7.5 6 z M 7.5 9 L 34.5 9 C 35.346499 9 36 9.6535009 36 10.5 L 36 17.253906 A 1.50015 1.50015 0 0 0 36 17.740234 L 36 34.5 A 1.50015 1.50015 0 1 0 39 34.5 L 39 19 L 40.5 19 C 41.346499 19 42 19.653501 42 20.5 L 42 35.5 C 42 37.450062 40.450062 39 38.5 39 L 9.5 39 C 7.5499381 39 6 37.450062 6 35.5 L 6 10.5 C 6 9.6535009 6.6535009 9 7.5 9 z M 10.5 15 A 1.50015 1.50015 0 1 0 10.5 18 L 31.5 18 A 1.50015 1.50015 0 1 0 31.5 15 L 10.5 15 z M 10.5 23 A 1.50015 1.50015 0 0 0 9 24.5 L 9 31.5 A 1.50015 1.50015 0 0 0 10.5 33 L 17.5 33 A 1.50015 1.50015 0 0 0 19 31.5 L 19 24.5 A 1.50015 1.50015 0 0 0 17.5 23 L 10.5 23 z M 23.5 23 A 1.50015 1.50015 0 1 0 23.5 26 L 31.5 26 A 1.50015 1.50015 0 1 0 31.5 23 L 23.5 23 z M 12 26 L 16 26 L 16 30 L 12 30 L 12 26 z M 23.5 30 A 1.50015 1.50015 0 1 0 23.5 33 L 31.5 33 A 1.50015 1.50015 0 1 0 31.5 30 L 23.5 30 z",
                filledIcon: "M 7.5 6 C 5.019 6 3 8.019 3 10.5 L 3 35.5 C 3 39.084 5.916 42 9.5 42 L 38.5 42 C 42.084 42 45 39.084 45 35.5 L 45 18.5 C 45 16.19 43.244 14.302781 41 14.050781 L 41 34.5 C 41 35.328 40.328 36 39.5 36 C 38.672 36 38 35.328 38 34.5 L 38 10.5 C 38 8.019 35.981 6 33.5 6 L 7.5 6 z M 10.5 15 L 30.5 15 C 31.329 15 32 15.672 32 16.5 C 32 17.328 31.329 18 30.5 18 L 10.5 18 C 9.671 18 9 17.328 9 16.5 C 9 15.672 9.671 15 10.5 15 z M 10.5 23 L 17.5 23 C 18.329 23 19 23.672 19 24.5 L 19 31.5 C 19 32.328 18.329 33 17.5 33 L 10.5 33 C 9.671 33 9 32.328 9 31.5 L 9 24.5 C 9 23.672 9.671 23 10.5 23 z M 23.5 23 L 30.5 23 C 31.329 23 32 23.672 32 24.5 C 32 25.328 31.329 26 30.5 26 L 23.5 26 C 22.671 26 22 25.328 22 24.5 C 22 23.672 22.671 23 23.5 23 z M 12 26 L 12 30 L 16 30 L 16 26 L 12 26 z M 23.5 30 L 30.5 30 C 31.329 30 32 30.672 32 31.5 C 32 32.328 31.329 33 30.5 33 L 23.5 33 C 22.671 33 22 32.328 22 31.5 C 22 30.672 22.671 30 23.5 30 z"
            },
            {
                title: 'Statistics',
                link: '/statistics',
                icon: "M 25 2 C 21.704135 2 19 4.7041348 19 8 L 12.5 8 C 10.585045 8 9 9.5850452 9 11.5 L 9 18 C 5.7041348 18 3 20.704135 3 24 C 3 27.295865 5.7041348 30 9 30 L 9 36.5 C 9 38.414955 10.585045 40 12.5 40 L 19 40 C 19 43.295865 21.704135 46 25 46 C 28.295865 46 31 43.295865 31 40 L 37.5 40 C 39.414955 40 41 38.414955 41 36.5 L 41 28.5 A 1.50015 1.50015 0 0 0 39.5 27 L 37 27 C 35.325865 27 34 25.674135 34 24 C 34 22.325865 35.325865 21 37 21 L 39.5 21 A 1.50015 1.50015 0 0 0 41 19.5 L 41 11.5 C 41 9.5850452 39.414955 8 37.5 8 L 31 8 C 31 4.7041348 28.295865 2 25 2 z M 25 5 C 26.674135 5 28 6.3258652 28 8 L 28 9.5 A 1.50015 1.50015 0 0 0 29.5 11 L 37.5 11 C 37.795045 11 38 11.204955 38 11.5 L 38 18 L 37 18 C 33.704135 18 31 20.704135 31 24 C 31 27.295865 33.704135 30 37 30 L 38 30 L 38 36.5 C 38 36.795045 37.795045 37 37.5 37 L 29.5 37 A 1.50015 1.50015 0 0 0 28 38.5 L 28 40 C 28 41.674135 26.674135 43 25 43 C 23.325865 43 22 41.674135 22 40 L 22 38.5 A 1.50015 1.50015 0 0 0 20.5 37 L 12.5 37 C 12.204955 37 12 36.795045 12 36.5 L 12 28.5 A 1.50015 1.50015 0 0 0 10.5 27 L 9 27 C 7.3258652 27 6 25.674135 6 24 C 6 22.325865 7.3258652 21 9 21 L 10.5 21 A 1.50015 1.50015 0 0 0 12 19.5 L 12 11.5 C 12 11.204955 12.204955 11 12.5 11 L 20.5 11 A 1.50015 1.50015 0 0 0 22 9.5 L 22 8 C 22 6.3258652 23.325865 5 25 5 z",
                filledIcon: "M38,19c0.071,0,1.5,0,1.5,0c0.828,0,1.5-0.672,1.5-1.5v-6C41,9.567,39.433,8,37.5,8H30c0,0,0-0.667,0-1c0-2.761-2.239-5-5-5	s-5,2.239-5,5c0,0.343,0,1,0,1h-7.5C10.567,8,9,9.567,9,11.5V19c0,0-0.657,0-1,0c-2.761,0-5,2.239-5,5s2.239,5,5,5c0.343,0,1,0,1,0	v7.5c0,1.933,1.567,3.5,3.5,3.5H20c0,0,0,0.657,0,1c0,2.761,2.239,5,5,5s5-2.239,5-5c0-0.343,0-1,0-1h7.5c1.933,0,3.5-1.567,3.5-3.5	v-6c0-0.825-0.677-1.5-1.502-1.5c-1.624,0-1.009,0-1.496,0c0,0-0.001,0-0.001,0c-2.761,0-5-2.239-5-5S35.239,19,38,19z"
            },
            {
                title: 'Profile',
                link: '/profile',
                icon: "M 24.5 4 C 19.722667 4 15.801817 5.343806 13.09375 7.9082031 C 10.385683 10.4726 9 14.183812 9 18.5 L 9 22.257812 C 7.8597735 23.168256 7 24.430675 7 26 C 7 28.361739 8.7044726 30.27003 10.919922 30.78125 C 11.816449 34.336333 13.30684 37.503248 15.40625 39.828125 C 17.708437 42.377556 20.706886 44 24 44 C 27.293114 44 30.291563 42.377556 32.59375 39.828125 C 34.69316 37.503248 36.183551 34.336333 37.080078 30.78125 C 39.295527 30.27003 41 28.361739 41 26 C 41 24.430284 40.137097 23.174656 39 22.269531 L 39 20.5 C 39 18.972289 38.692905 17.684593 38.388672 16.746094 C 39.729084 15.976372 40.404471 14.301112 39.703125 12.832031 C 37.198859 7.5967448 31.772704 4 24.5 4 z M 24.5 7 C 30.817296 7 34.972359 9.8962399 36.996094 14.126953 C 37.015684 14.168703 37.01229 14.182458 36.9375 14.205078 C 35.831221 14.539662 33.155739 15 30 15 C 26.1875 15 23.651629 14.289593 22.091797 13.621094 C 20.531965 12.952594 20.060547 12.439453 20.060547 12.439453 A 1.50015 1.50015 0 0 0 17.591797 12.982422 C 17.591797 12.982422 17.257509 14.021898 15.583984 15.310547 A 1.501294 1.501294 0 1 0 17.416016 17.689453 C 18.397661 16.933566 18.998913 16.16239 19.472656 15.5 C 19.971545 15.84549 19.970136 15.976878 20.908203 16.378906 C 22.848371 17.210407 25.8125 18 30 18 C 32.191533 18 33.963016 17.797096 35.484375 17.541016 C 35.729342 18.236361 36 19.210403 36 20.5 L 36 22.878906 A 1.50015 1.50015 0 0 0 36.855469 24.234375 C 37.54264 24.561015 38 25.202806 38 26 C 38 27.122343 37.122343 28 36 28 C 36.264714 28 36.24617 27.994141 35.939453 27.994141 A 1.50015 1.50015 0 0 0 34.470703 29.185547 C 33.727184 32.728666 32.236501 35.746337 30.367188 37.816406 C 28.497877 39.886516 26.317886 41 24 41 C 21.682114 41 19.502126 39.886475 17.632812 37.816406 C 15.763499 35.746337 14.272816 32.728666 13.529297 29.185547 A 1.50015 1.50015 0 0 0 12.060547 27.994141 C 11.753833 27.994141 11.735286 28 12 28 C 10.877657 28 10 27.122343 10 26 C 10 25.196375 10.461497 24.541671 11.142578 24.21875 A 1.50015 1.50015 0 0 0 12 22.863281 L 12 18.5 C 12 14.808188 13.114317 12.01954 15.15625 10.085938 C 17.198183 8.1523341 20.277333 7 24.5 7 z M 19 24 A 2 2 0 0 0 19 28 A 2 2 0 0 0 19 24 z M 29 24 A 2 2 0 0 0 29 28 A 2 2 0 0 0 29 24 z",
                filledIcon: "M 24.5 4 C 14.794 4 9 9.421 9 18.5 L 9 22.021484 C 7.747 22.949484 7 24.401 7 26 C 7 28.357 8.6398906 30.338281 10.837891 30.863281 C 12.832891 38.767281 18.026 44 24 44 C 29.974 44 35.167109 38.767281 37.162109 30.863281 C 39.360109 30.338281 41 28.357 41 26 C 41 24.41 40.253 22.964109 39 22.037109 L 39 20.5 C 39 19.048 38.706063 17.753359 38.414062 16.818359 C 38.997062 16.494359 39.464281 15.987188 39.738281 15.367188 C 40.097281 14.554187 40.085125 13.631031 39.703125 12.832031 C 37.019125 7.2200312 31.478 4 24.5 4 z M 19.460938 15.644531 C 21.208937 16.654531 24.553 18 30 18 C 32.128 18 34.023859 17.816172 35.505859 17.576172 C 35.737859 18.282172 36 19.327 36 20.5 L 36 22.878906 C 36 23.457906 36.332469 23.984422 36.855469 24.232422 C 37.561469 24.567422 38 25.245 38 26 C 38 27.083 37.134594 27.968047 36.058594 27.998047 C 36.016594 27.995047 35.974453 27.994141 35.939453 27.994141 C 35.230453 27.994141 34.616703 28.490547 34.470703 29.185547 C 33.011703 36.141547 28.706 41 24 41 C 19.294 41 14.988297 36.1425 13.529297 29.1875 C 13.383297 28.4925 12.769547 27.994141 12.060547 27.994141 C 12.026547 27.994141 11.985359 27.997 11.943359 28 C 10.866359 27.969 10 27.084 10 26 C 10 25.235 10.436578 24.55275 11.142578 24.21875 C 11.665578 23.97075 12 23.442281 12 22.863281 L 12 20.232422 C 15.17 19.457422 17.332062 17.7545 17.414062 17.6875 C 18.066063 17.1855 18.649391 16.630156 19.150391 16.035156 C 19.261391 15.901156 19.364984 15.771484 19.458984 15.646484 C 19.458984 15.646484 19.460938 15.644531 19.460938 15.644531 z M 19 24 A 2 2 0 0 0 19 28 A 2 2 0 0 0 19 24 z M 29 24 A 2 2 0 0 0 29 28 A 2 2 0 0 0 29 24 z"
            },
            {
                title: 'Settings',
                link: '/settings',
                icon: "M 22.205078 2 A 1.0001 1.0001 0 0 0 21.21875 2.8378906 L 20.246094 8.7929688 C 19.076509 9.1331971 17.961243 9.5922728 16.910156 10.164062 L 11.996094 6.6542969 A 1.0001 1.0001 0 0 0 10.708984 6.7597656 L 6.8183594 10.646484 A 1.0001 1.0001 0 0 0 6.7070312 11.927734 L 10.164062 16.873047 C 9.583454 17.930271 9.1142098 19.051824 8.765625 20.232422 L 2.8359375 21.21875 A 1.0001 1.0001 0 0 0 2.0019531 22.205078 L 2.0019531 27.705078 A 1.0001 1.0001 0 0 0 2.8261719 28.691406 L 8.7597656 29.742188 C 9.1064607 30.920739 9.5727226 32.043065 10.154297 33.101562 L 6.6542969 37.998047 A 1.0001 1.0001 0 0 0 6.7597656 39.285156 L 10.648438 43.175781 A 1.0001 1.0001 0 0 0 11.927734 43.289062 L 16.882812 39.820312 C 17.936999 40.39548 19.054994 40.857928 20.228516 41.201172 L 21.21875 47.164062 A 1.0001 1.0001 0 0 0 22.205078 48 L 27.705078 48 A 1.0001 1.0001 0 0 0 28.691406 47.173828 L 29.751953 41.1875 C 30.920633 40.838997 32.033372 40.369697 33.082031 39.791016 L 38.070312 43.291016 A 1.0001 1.0001 0 0 0 39.351562 43.179688 L 43.240234 39.287109 A 1.0001 1.0001 0 0 0 43.34375 37.996094 L 39.787109 33.058594 C 40.355783 32.014958 40.813915 30.908875 41.154297 29.748047 L 47.171875 28.693359 A 1.0001 1.0001 0 0 0 47.998047 27.707031 L 47.998047 22.207031 A 1.0001 1.0001 0 0 0 47.160156 21.220703 L 41.152344 20.238281 C 40.80968 19.078827 40.350281 17.974723 39.78125 16.931641 L 43.289062 11.933594 A 1.0001 1.0001 0 0 0 43.177734 10.652344 L 39.287109 6.7636719 A 1.0001 1.0001 0 0 0 37.996094 6.6601562 L 33.072266 10.201172 C 32.023186 9.6248101 30.909713 9.1579916 29.738281 8.8125 L 28.691406 2.828125 A 1.0001 1.0001 0 0 0 27.705078 2 L 22.205078 2 z M 23.056641 4 L 26.865234 4 L 27.861328 9.6855469 A 1.0001 1.0001 0 0 0 28.603516 10.484375 C 30.066026 10.848832 31.439607 11.426549 32.693359 12.185547 A 1.0001 1.0001 0 0 0 33.794922 12.142578 L 38.474609 8.7792969 L 41.167969 11.472656 L 37.835938 16.220703 A 1.0001 1.0001 0 0 0 37.796875 17.310547 C 38.548366 18.561471 39.118333 19.926379 39.482422 21.380859 A 1.0001 1.0001 0 0 0 40.291016 22.125 L 45.998047 23.058594 L 45.998047 26.867188 L 40.279297 27.871094 A 1.0001 1.0001 0 0 0 39.482422 28.617188 C 39.122545 30.069817 38.552234 31.434687 37.800781 32.685547 A 1.0001 1.0001 0 0 0 37.845703 33.785156 L 41.224609 38.474609 L 38.53125 41.169922 L 33.791016 37.84375 A 1.0001 1.0001 0 0 0 32.697266 37.808594 C 31.44975 38.567585 30.074755 39.148028 28.617188 39.517578 A 1.0001 1.0001 0 0 0 27.876953 40.3125 L 26.867188 46 L 23.052734 46 L 22.111328 40.337891 A 1.0001 1.0001 0 0 0 21.365234 39.53125 C 19.90185 39.170557 18.522094 38.59371 17.259766 37.835938 A 1.0001 1.0001 0 0 0 16.171875 37.875 L 11.46875 41.169922 L 8.7734375 38.470703 L 12.097656 33.824219 A 1.0001 1.0001 0 0 0 12.138672 32.724609 C 11.372652 31.458855 10.793319 30.079213 10.427734 28.609375 A 1.0001 1.0001 0 0 0 9.6328125 27.867188 L 4.0019531 26.867188 L 4.0019531 23.052734 L 9.6289062 22.117188 A 1.0001 1.0001 0 0 0 10.435547 21.373047 C 10.804273 19.898143 11.383325 18.518729 12.146484 17.255859 A 1.0001 1.0001 0 0 0 12.111328 16.164062 L 8.8261719 11.46875 L 11.523438 8.7734375 L 16.185547 12.105469 A 1.0001 1.0001 0 0 0 17.28125 12.148438 C 18.536908 11.394293 19.919867 10.822081 21.384766 10.462891 A 1.0001 1.0001 0 0 0 22.132812 9.6523438 L 23.056641 4 z M 25 17 C 20.593567 17 17 20.593567 17 25 C 17 29.406433 20.593567 33 25 33 C 29.406433 33 33 29.406433 33 25 C 33 20.593567 29.406433 17 25 17 z M 25 19 C 28.325553 19 31 21.674447 31 25 C 31 28.325553 28.325553 31 25 31 C 21.674447 31 19 28.325553 19 25 C 19 21.674447 21.674447 19 25 19 z",
                filledIcon: "M47.16,21.221l-5.91-0.966c-0.346-1.186-0.819-2.326-1.411-3.405l3.45-4.917c0.279-0.397,0.231-0.938-0.112-1.282 l-3.889-3.887c-0.347-0.346-0.893-0.391-1.291-0.104l-4.843,3.481c-1.089-0.602-2.239-1.08-3.432-1.427l-1.031-5.886 C28.607,2.35,28.192,2,27.706,2h-5.5c-0.49,0-0.908,0.355-0.987,0.839l-0.956,5.854c-1.2,0.345-2.352,0.818-3.437,1.412l-4.83-3.45 c-0.399-0.285-0.942-0.239-1.289,0.106L6.82,10.648c-0.343,0.343-0.391,0.883-0.112,1.28l3.399,4.863 c-0.605,1.095-1.087,2.254-1.438,3.46l-5.831,0.971c-0.482,0.08-0.836,0.498-0.836,0.986v5.5c0,0.485,0.348,0.9,0.825,0.985 l5.831,1.034c0.349,1.203,0.831,2.362,1.438,3.46l-3.441,4.813c-0.284,0.397-0.239,0.942,0.106,1.289l3.888,3.891 c0.343,0.343,0.884,0.391,1.281,0.112l4.87-3.411c1.093,0.601,2.248,1.078,3.445,1.424l0.976,5.861C21.3,47.647,21.717,48,22.206,48 h5.5c0.485,0,0.9-0.348,0.984-0.825l1.045-5.89c1.199-0.353,2.348-0.833,3.43-1.435l4.905,3.441 c0.398,0.281,0.938,0.232,1.282-0.111l3.888-3.891c0.346-0.347,0.391-0.894,0.104-1.292l-3.498-4.857 c0.593-1.08,1.064-2.222,1.407-3.408l5.918-1.039c0.479-0.084,0.827-0.5,0.827-0.985v-5.5C47.999,21.718,47.644,21.3,47.16,21.221z M25,32c-3.866,0-7-3.134-7-7c0-3.866,3.134-7,7-7s7,3.134,7,7C32,28.866,28.866,32,25,32z"
            },
            {
                title: 'About Us',
                link: '/about',
                icon: "M 24 4 C 12.972066 4 4 12.972074 4 24 C 4 35.027926 12.972066 44 24 44 C 35.027934 44 44 35.027926 44 24 C 44 12.972074 35.027934 4 24 4 z M 24 7 C 33.406615 7 41 14.593391 41 24 C 41 33.406609 33.406615 41 24 41 C 14.593385 41 7 33.406609 7 24 C 7 14.593391 14.593385 7 24 7 z M 24 14 A 2 2 0 0 0 24 18 A 2 2 0 0 0 24 14 z M 23.976562 20.978516 A 1.50015 1.50015 0 0 0 22.5 22.5 L 22.5 33.5 A 1.50015 1.50015 0 1 0 25.5 33.5 L 25.5 22.5 A 1.50015 1.50015 0 0 0 23.976562 20.978516 z",
                filledIcon: "M24,4C12.972,4,4,12.972,4,24s8.972,20,20,20s20-8.972,20-20S35.028,4,24,4z M25.5,33.5c0,0.828-0.672,1.5-1.5,1.5	s-1.5-0.672-1.5-1.5v-11c0-0.828,0.672-1.5,1.5-1.5s1.5,0.672,1.5,1.5V33.5z M24,18c-1.105,0-2-0.895-2-2c0-1.105,0.895-2,2-2	s2,0.895,2,2C26,17.105,25.105,18,24,18z"
            },
            {
                title: 'Admin',
                link: '/admin/courses/new',
                icon: "M 24 4 C 19.599415 4 16 7.599415 16 12 L 16 16 L 12.5 16 C 10.032499 16 8 18.032499 8 20.5 L 8 39.5 C 8 41.967501 10.032499 44 12.5 44 L 35.5 44 C 37.967501 44 40 41.967501 40 39.5 L 40 20.5 C 40 18.032499 37.967501 16 35.5 16 L 32 16 L 32 12 C 32 7.599415 28.400585 4 24 4 z M 24 7 C 26.779415 7 29 9.220585 29 12 L 29 16 L 19 16 L 19 12 C 19 9.220585 21.220585 7 24 7 z M 12.5 19 L 35.5 19 C 36.346499 19 37 19.653501 37 20.5 L 37 39.5 C 37 40.346499 36.346499 41 35.5 41 L 12.5 41 C 11.653501 41 11 40.346499 11 39.5 L 11 20.5 C 11 19.653501 11.653501 19 12.5 19 z M 24 27 A 3 3 0 0 0 24 33 A 3 3 0 0 0 24 27 z",
                filledIcon: "M 24 4 C 19.599415 4 16 7.599415 16 12 L 16 16 L 12.5 16 C 10.019 16 8 18.019 8 20.5 L 8 39.5 C 8 41.981 10.019 44 12.5 44 L 35.5 44 C 37.981 44 40 41.981 40 39.5 L 40 20.5 C 40 18.019 37.981 16 35.5 16 L 32 16 L 32 12 C 32 7.599415 28.400585 4 24 4 z M 24 7 C 26.779415 7 29 9.220585 29 12 L 29 16 L 19 16 L 19 12 C 19 9.220585 21.220585 7 24 7 z M 24 27 C 25.657 27 27 28.343 27 30 C 27 31.657 25.657 33 24 33 C 22.343 33 21 31.657 21 30 C 21 28.343 22.343 27 24 27 z"
            },
        ];

    /**
     * SVG element representing a logout button.
     */
    const logoutButton: React.JSX.Element = <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="28" height="28" viewBox="0 0 48 48">
        <path d="M 24 4 C 12.972066 4 4 12.972074 4 24 C 4 35.027926 12.972066 44 24 44 C 35.027934 44 44 35.027926 44 24 C 44 12.972074 35.027934 4 24 4 z M 24 7 C 28.159946 7 31.91445 8.5434723 34.865234 11.013672 L 11.013672 34.863281 C 8.544055 31.912656 7 28.1594 7 24 C 7 14.593391 14.593385 7 24 7 z M 36.986328 13.134766 C 39.456525 16.085553 41 19.840056 41 24 C 41 33.406609 33.406615 41 24 41 C 19.840597 41 16.087341 39.455948 13.136719 36.986328 L 36.986328 13.134766 z"></path>
    </svg>;

    /**
     * Logs out the current user by deleting the 'currentUser' cookie and refreshing the router.
     */
    const logout: () => void = (): void => {
        deleteCookie('currentUser');
        router.refresh();
    };

    return (

        <>
            <div className={
                `flex flex-col bg-card border-r sticky left-0 top-0 h-screen justify-between py-6 ` +
                `${isOpen ? 'px-6' : 'px-2'}` // Conditional padding based on isOpen state
            }>
                <div className="sticky top-6">
                    <div className="items-start mb-2">
                        <div className="rounded grid justify-items-center">
                            <Link href="/">
                                <span className="text-xl">PG<span className="text-3xl text-primary font-medium">2</span>L</span>
                            </Link>
                        </div>
                    </div>
                    <div className="flex flex-col gap-2">
                        <Separator className="mb-4" />
                        <div className="flex items-center justify-center">
                            <div className="grid items-center justify-center gap-4">
                                {
                                    menuItems.map((item: { // Iterate over the menu items and create a navigation link for each
                                        title: string;
                                        link: string;
                                        icon: string;
                                        filledIcon: string;
                                    }, index: number): React.JSX.Element => {
                                        const active: boolean = pageContext === item.link.slice(1, pageContext.length + 1); // Determine if the current item is active based on the page context
                                        return (
                                            <Link key={ index } href={ item.link }>
                                                <TooltipProvider>
                                                    <Tooltip>
                                                        <TooltipTrigger asChild>
                                                            <Button
                                                                variant="ghost"
                                                                className={
                                                                    `w-full text-start fill-muted-foreground text-muted-foreground ` +
                                                                    `hover:text-foreground hover:fill-foreground ` + // Hover classes: text and fill color on hover
                                                                    `${active && "active fill-foreground text-foreground"}` // Active state classes: additional styles for active state
                                                                }
                                                            >
                                                                <div>
                                                                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="28" height="28" viewBox="0 0 48 48">
                                                                        <path className={ `${active ? "opacity-100" : "opacity-0"}` } d={ item.filledIcon }></path>
                                                                        <path className={ `${active ? "opacity-0" : "opacity-100"}` } d={ item.icon }></path>
                                                                    </svg>
                                                                </div>
                                                                {
                                                                    isOpen && // Conditionally rendered title based on sidebar state
                                                                    <span className="w-full ms-2">{ item.title }</span>
                                                                }
                                                            </Button>
                                                        </TooltipTrigger>
                                                        <TooltipContent>
                                                            { item.title }
                                                        </TooltipContent>
                                                    </Tooltip>
                                                </TooltipProvider>
                                            </Link>
                                        );
                                    }) }
                            </div>
                        </div>
                    </div>
                </div>
                <div className="h-fit">
                    <Button variant="ghost" onClick={ logout } className="w-full text-start fill-muted-foreground hover:fill-foreground text-muted-foreground hover:text-foreground">
                        <div>
                            { logoutButton }
                        </div>
                        {
                            isOpen && // Conditionally rendered title based on sidebar state
                            <span className="w-full ms-2">Logout</span>
                        }
                    </Button>
                    <Separator className="mt-4" />
                </div>
            </div>
            <div className="flex flex-col h-screen items-center justify-center z-50 ">
                <Button
                    variant="ghost"
                    onClick={ (): void => setIsOpen(!isOpen) } // Toggle the sidebar state on button click
                    className="absolute !p-2 fixed"
                    size="sm"
                >
                    {
                        isOpen ? // Conditional rendering of the chevron icons based on the sidebar state
                            <icons.ChevronLeftIcon className="h-6 w-6" />
                            : <icons.ChevronRightIcon className="h-6 w-6" />
                    }
                </Button>
            </div>
        </>

    );
};

export default MainMenu;
